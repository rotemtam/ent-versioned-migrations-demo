// Code generated by ent, DO NOT EDIT.

package blog

import (
	"time"
)

const (
	// Label holds the string label denoting the blog type in the database.
	Label = "blog"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldBody holds the string denoting the body field in the database.
	FieldBody = "body"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeAuthor holds the string denoting the author edge name in mutations.
	EdgeAuthor = "author"
	// Table holds the table name of the blog in the database.
	Table = "blogs"
	// AuthorTable is the table that holds the author relation/edge.
	AuthorTable = "blogs"
	// AuthorInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	AuthorInverseTable = "users"
	// AuthorColumn is the table column denoting the author relation/edge.
	AuthorColumn = "user_blog_posts"
)

// Columns holds all SQL columns for blog fields.
var Columns = []string{
	FieldID,
	FieldTitle,
	FieldBody,
	FieldCreatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "blogs"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_blog_posts",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)
